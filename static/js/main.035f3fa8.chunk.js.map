{"version":3,"sources":["assets/testpic.jpg","assets/logo.png","component/intro/index.js","lib/util.js","component/panel/cross/index.js","component/panel/index.js","component/result/index.js","lib/color.js","component/pick/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Intro","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","fetchingDemo","_resetFileInput","fileInput","current","value","_onButtonClick","click","_onFileChange","e","target","file","files","onFile","_onDemoClick","asyncToGenerator","regenerator_default","a","mark","_callee","blob","type","wrap","_context","prev","next","setState","fetch","testpic","then","r","sent","exec","Blob","t0","alert","stop","createRef","react_default","createElement","className","src","logo","alt","onClick","ref","style","display","accept","onChange","React","Component","deselectCurrent","require","defaultMessage","copy","text","options","debug","message","reselectPrevious","range","selection","success","document","createRange","getSelection","textContent","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","appendChild","selectNode","addRange","execCommand","Error","err","console","error","warn","window","clipboardData","setData","copyKey","test","navigator","userAgent","replace","format","prompt","removeRange","removeAllRanges","removeChild","drawDataToCanvas","canvas","data","ctx","getContext","clearRect","width","height","putImageData","decodeImage","url","img","loaded","Image","decoding","Promise","resolve","reject","onload","onerror","decode","catch","abrupt","blobToImg","_x2","_blobToImg","apply","arguments","_callee2","_context2","URL","createObjectURL","revokeObjectURL","finish","blobToText","Response","drawableToImageData","drawable","opts","length","undefined","_opts$width","_opts$height","_opts$sx","sx","_opts$sy","sy","_opts$sw","sw","_opts$sh","sh","drawImage","getImageData","nativeDecode","_x3","_nativeDecode","_callee3","_context3","self","createImageBitmap","Cross","orientation","_positionH","_relativePositionH","_positionOnPointerStartH","_positionHS","_relativePositionHS","_positionOnPointerStartHS","_positionV","_relativePositionV","_positionOnPointerStartV","_positionVS","_relativePositionVS","_positionOnPointerStartVS","_setHorizontal","horizontal","transform","concat","setY","_setHorizontalScrubber","scrubber1","_setVertical","vertical","setX","_setVerticalScrubber","scrubber2","container","_this2","slider1","slider2","pointerTrackerH","PointerTracker","start","_","event","currentPointers","preventDefault","move","_pointerChangeH","startPointers","pointerTrackerV","_pointerChangeV","ResizeObserver","_resetPosition","observe","addEventListener","removeEventListener","_this3","requestAnimationFrame","bounds","getBoundingClientRect","startPoint","currentPoint","clientX","Math","max","min","clientY","btn","aria-hidden","xlinkHref","children","config","attributes","childList","subtree","Panel","posX","posY","left","scale","showMagnifier","_observer","MutationObserver","mutationsList","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","mutation","offsetWidth","rect","_rect$left","_rect$top","_drawMagnifier","log","attributeName","return","magnifier","_this$state","source","x","y","offsetX","offsetY","sourceCtx","imageSmoothingEnabled","mozImageSmoothingEnabled","webkitImageSmoothingEnabled","msImageSmoothingEnabled","beginPath","strokeStyle","moveTo","lineTo","stroke","closePath","zoom","round","rgba","pick","onResult","_toggleMagnifier","magnifierGrid","pinchZoomPan","getDrawable","prevProps","prevState","prevDrawable","disconnect","decoded","tools","onBack","cross","PinchZoomPan_default","zoomButtons","Result","expand","_toggleExpand","vibrate","_this$props$rgba","g","b","rgbStr","hslStr","cmin","cmax","delta","h","l","abs","toFixed","rgbToHsl","hexStr","toString","expandClass","copyContent","originalDocumentTitle","title","processSvg","parser","svg","viewBox","viewboxParts","serializer","newSource","DOMParser","parseFromString","documentElement","hasAttribute","getAttribute","split","setAttribute","XMLSerializer","serializeToString","Pick","widthQuery","matchMedia","mobileView","matches","result","_onMobileWidthChange","_updateFile","vectorImage","newState","loading","startsWith","updateDocumentTitle","name","objectSpread","addListener","nextProps","updateFile","filename","panel","location","ROUTE_EDITOR","back","history","App","isEditorOpen","_handleDrop","openEditor","_onPickeLocalFile","onPopState","hash","editorURL","href","pushState","FileDrop","onDrop","component_pick","intro","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.035f3fa8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/testpic.23efb93b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.8ad1def0.png\";","import React, { createRef } from 'react';\n\nimport logo from '@assets/logo.png';\nimport testpic from '@assets/testpic.jpg';\n\nimport './style.scss';\n\nclass Intro extends React.Component {\n    state = {\n        fetchingDemo: false,\n    };\n\n    constructor(props) {\n        super(props);\n        this.fileInput = createRef();\n    }\n\n    _resetFileInput = () => {\n        this.fileInput.current && (this.fileInput.current.value = '');\n    }\n\n    _onButtonClick = () => {\n        this.fileInput.current && (this.fileInput.current.click());\n    }\n\n    _onFileChange = e => {\n        const fileInput = e.target;\n        const file = fileInput.files && fileInput.files[0];\n        if (!file) return;\n        this._resetFileInput();\n        this.props.onFile(file);\n    }\n\n    _onDemoClick = async () => {\n        try {\n            this.setState({ fetchingDemo: true });\n            const blob = await fetch(testpic).then(r => r.blob());\n        \n            // Firefox doesn't like content types like 'image/png; charset=UTF-8', which Webpack's dev\n            // server returns. https://bugzilla.mozilla.org/show_bug.cgi?id=1497925.\n            const type = /[^;]*/.exec(blob.type) && /[^;]*/.exec(blob.type)[0];\n            const file = new Blob([blob], { type });\n            this.props.onFile(file);\n        } catch (err) {\n            this.setState({ fetchingDemo: false });\n            alert(\"Couldn't fetch demo image\");\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"intro\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <p className=\"open-image-guide\">\n                    <span> Drag &amp; drop or</span>\n                    {' '}\n                    <button\n                        className=\"select-button\"\n                        onClick={this._onButtonClick}\n                    >\n                        select an image\n                    </button>\n                    <input\n                        ref={this.fileInput}\n                        style={{ display: 'none' }}\n                        type=\"file\"\n                        accept=\"image/*\"\n                        onChange={this._onFileChange}\n                    />\n                </p>\n                <div className=\"demo-tip\">Or try this</div>\n                <div className=\"demo-pic\" onClick={this._onDemoClick}>\n                    <img src={testpic} alt='test' />\n                </div>\n                {/* <div>\n                <input type='text' />\n                <button>-></button>\n                </div> */}\n            </div>\n          );\n    }\n}\n\nexport default Intro;\n","/* eslint-disable no-restricted-globals */\n/* eslint-disable no-unused-expressions */\nvar deselectCurrent = require('toggle-selection');\n\nvar defaultMessage = 'Copy to clipboard: #{key}, Enter';\n\nfunction format(message) {\n    var copyKey = (/mac os x/i.test(navigator.userAgent) ? '⌘' : 'Ctrl') + '+C';\n    return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nexport function copy(text, options) {\n    var debug, message, reselectPrevious, range, selection, mark, success = false;\n    if (!options) { options = {}; }\n    debug = options.debug || false;\n    try {\n        reselectPrevious = deselectCurrent();\n\n        range = document.createRange();\n        selection = document.getSelection();\n\n        mark = document.createElement('span');\n        mark.textContent = text;\n        // reset user styles for span element\n        mark.style.all = 'unset';\n        // prevents scrolling to the end of the page\n        mark.style.position = 'fixed';\n        mark.style.top = 0;\n        mark.style.clip = 'rect(0, 0, 0, 0)';\n        // used to preserve spaces and line breaks\n        mark.style.whiteSpace = 'pre';\n        // do not inherit user-select (it may be `none`)\n        mark.style.webkitUserSelect = 'text';\n        mark.style.MozUserSelect = 'text';\n        mark.style.msUserSelect = 'text';\n        mark.style.userSelect = 'text';\n\n        document.body.appendChild(mark);\n\n        range.selectNode(mark);\n        selection.addRange(range);\n\n        var successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error('copy command was unsuccessful');\n        }\n        success = true;\n    } catch (err) {\n        debug && console.error('unable to copy using execCommand: ', err);\n        debug && console.warn('trying IE specific stuff');\n        try {\n            window.clipboardData.setData('text', text);\n            success = true;\n        } catch (err) {\n            debug && console.error('unable to copy using clipboardData: ', err);\n            debug && console.error('falling back to prompt');\n            message = format('message' in options ? options.message : defaultMessage);\n            window.prompt(message, text);\n        }\n    } finally {\n        if (selection) {\n            if (typeof selection.removeRange == 'function') {\n                selection.removeRange(range);\n            } else {\n                selection.removeAllRanges();\n            }\n        }\n\n        if (mark) {\n            document.body.removeChild(mark);\n        }\n        reselectPrevious();\n    }\n\n    return success;\n}\n\n\nexport function drawDataToCanvas(canvas, data) {\n    const ctx = canvas.getContext('2d');\n    if (!ctx) throw Error('Canvas not initialized');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.putImageData(data, 0, 0);\n}\n\nasync function decodeImage(url) {\n    const img = new Image();\n    img.decoding = 'async';\n    img.src = url;\n    const loaded = new Promise((resolve, reject) => {\n      img.onload = () => resolve();\n      img.onerror = () => reject(Error('Image loading error'));\n    });\n  \n    if (img.decode) {\n      // Nice off-thread way supported in Safari/Chrome.\n      // Safari throws on decode if the source is SVG.\n      // https://bugs.webkit.org/show_bug.cgi?id=188347\n      await img.decode().catch(() => null);\n    }\n  \n    // Always await loaded, as we may have bailed due to the Safari bug above.\n    await loaded;\n    return img;\n}\n\nexport async function blobToImg(blob) {\n    const url = URL.createObjectURL(blob);\n  \n    try {\n      return await decodeImage(url);\n    } finally {\n      URL.revokeObjectURL(url);\n    }\n}\n\nexport function blobToText(blob) {\n    return new Response(blob).text();\n}\n\nexport function drawableToImageData(drawable, opts = {}) {\n    const {\n      width = drawable.width,\n      height = drawable.height,\n      sx = 0,\n      sy = 0,\n      sw = drawable.width,\n      sh = drawable.height,\n    } = opts;\n  \n    // Make canvas same size as image\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    // Draw image onto canvas\n    const ctx = canvas.getContext('2d');\n    if (!ctx) throw new Error('Could not create canvas context');\n    ctx.drawImage(drawable, sx, sy, sw, sh, 0, 0, width, height);\n    return ctx.getImageData(0, 0, width, height);\n}\n\nexport async function nativeDecode(blob) {\n    // Prefer createImageBitmap as it's the off-thread option for Firefox.\n    const drawable = 'createImageBitmap' in self ?\n      await createImageBitmap(blob) : await blobToImg(blob);\n  \n    return drawableToImageData(drawable);\n}\n\n/** Replace the contents of a canvas with the given data */\nexport function drawImageToCanvas(canvas, img) {\n    const ctx = canvas.getContext('2d');\n    if (!ctx) throw Error('Canvas not initialized');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n}\n\n\nexport function zoom(target, source, x, y, offsetX, offsetY) {\n    const sourceCtx = source.getContext('2d');\n    const { width, height } = source;\n\n    sourceCtx.imageSmoothingEnabled = false;\n    sourceCtx.mozImageSmoothingEnabled = false;\n    sourceCtx.webkitImageSmoothingEnabled = false;\n    sourceCtx.msImageSmoothingEnabled = false;\n\n    sourceCtx.drawImage(target,\n        x - offsetX , y - offsetY,\n        10, 10,\n        0, 0,\n        width, height);\n\n        sourceCtx.beginPath();\n        sourceCtx.strokeStyle = 'red';\n        sourceCtx.moveTo(width/2 - 5, height/2 - 5);\n        sourceCtx.lineTo(width/2 + 5, height/2 - 5);\n        sourceCtx.lineTo(width/2 + 5, height/2 + 5);\n        sourceCtx.lineTo(width/2 - 5, height/2 + 5);\n        sourceCtx.lineTo(width/2 - 5, height/2 - 5);\n        sourceCtx.stroke();\n        sourceCtx.closePath();\n}\n\nexport function pick(target) {\n    const ctx = target.getContext('2d');\n    const pixel = ctx.getImageData(target.width/2, target.height/2, 1, 1);\n    const data = pixel.data;\n    // const rgba = 'rgba(' + data[0] + ', ' + data[1] +\n    //            ', ' + data[2] + ', ' + (data[3] / 255) + ')';\n    // return rgba;\n    return [data[0], data[1], data[2], data[3] / 255];\n}\n","import React, { createRef } from 'react';\nimport PointerTracker from 'pointer-tracker';\n\nimport './style.scss';\n\nclass Cross extends React.Component {\n\n    state = {\n        orientation: ''\n    };\n\n    _positionH = 0;\n    _relativePositionH = 0.5;\n    _positionOnPointerStartH = 0;\n\n    _positionHS = 0;\n    _relativePositionHS = 0.75;\n    _positionOnPointerStartHS = 0;\n\n    _positionV = 0;\n    _relativePositionV = 0.5;\n    _positionOnPointerStartV = 0;\n\n    _positionVS = 0;\n    _relativePositionVS = 0.75;\n    _positionOnPointerStartVS = 0;\n\n    constructor(props) {\n        super(props);\n\n        this.container = createRef();\n        this.horizontal = createRef();\n        this.vertical = createRef();\n        this.scrubber1 = createRef();\n        this.scrubber2 = createRef();\n    }\n\n    componentDidMount() {\n        const slider1 = this.scrubber1.current;\n        const slider2 = this.scrubber2.current;\n\n        const pointerTrackerH = new PointerTracker(slider1, {\n            start: (_, event) => {\n                if (pointerTrackerH.currentPointers.length === 1) return false;\n                event.preventDefault();\n                this._positionOnPointerStartH = this._positionH;\n                this._positionOnPointerStartHS = this._positionHS;\n                return true;\n            },\n            move: () => {\n                this._pointerChangeH(\n                    pointerTrackerH.startPointers[0],\n                    pointerTrackerH.currentPointers[0]\n                );\n            }\n        });\n\n        const pointerTrackerV = new PointerTracker(slider2, {\n            start: (_, event) => {\n                if (pointerTrackerV.currentPointers.length === 1) return false;\n                event.preventDefault();\n                this._positionOnPointerStartV = this._positionV;\n                this._positionOnPointerStartVS = this._positionVS;\n                return true;\n            },\n            move: () => {\n                this._pointerChangeV(\n                    pointerTrackerV.startPointers[0],\n                    pointerTrackerV.currentPointers[0],\n                );\n            }\n        });\n\n        if ('ResizeObserver' in window && this.container.current) {\n            new ResizeObserver(() => this._resetPosition())\n                .observe(this.container.current);\n        } else {\n            window.addEventListener('resize', this._resetPosition);\n        }\n\n        this._resetPosition();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this._resetPosition);\n    }\n\n    _resetPosition() {\n        // Set the initial position of the handle.\n        requestAnimationFrame(() => {\n            if (this.container && this.container.current) {\n                const bounds = this.container.current.getBoundingClientRect();\n                this._positionH = bounds.height * this._relativePositionH;\n                this._positionHS = bounds.width * this._relativePositionHS;\n                this._positionV = bounds.width * this._relativePositionV;\n                this._positionVS = bounds.height * this._relativePositionVS;\n                this._setHorizontal();\n                this._setHorizontalScrubber();\n                this._setVertical();\n                this._setVerticalScrubber();\n            }\n        });\n      }\n\n    _pointerChangeH(startPoint, currentPoint) {\n        const bounds = this.container.current.getBoundingClientRect();\n    \n        this._positionHS = this._positionOnPointerStartHS +\n            (currentPoint.clientX -startPoint.clientX);\n        this._positionHS = Math.max(0, Math.min(this._positionHS, bounds.width - 30));\n        this._relativePositionHS = this._positionHS / bounds.width;\n        this._setHorizontalScrubber();\n\n        this._positionH = this._positionOnPointerStartH +\n            (currentPoint.clientY - startPoint.clientY);\n        // Clamp position to element bounds.\n        this._positionH = Math.max(0, Math.min(this._positionH, bounds.height));\n        this._relativePositionH = this._positionH / bounds.height;\n        this._setHorizontal();\n        \n    }\n\n    _pointerChangeV(startPoint, currentPoint) {\n        const bounds = this.container.current.getBoundingClientRect();\n    \n        this._positionVS = this._positionOnPointerStartVS +\n            (currentPoint.clientY -startPoint.clientY);\n        this._positionVS = Math.max(0, Math.min(this._positionVS, bounds.height - 30));\n        this._relativePositionVS = this._positionVS / bounds.height;\n        this._setVerticalScrubber();\n\n        this._positionV = this._positionOnPointerStartV +\n            (currentPoint.clientX - startPoint.clientX);\n        // Clamp position to element bounds.\n        this._positionV = Math.max(0, Math.min(this._positionV, bounds.width));\n        this._relativePositionH = this._positionV / bounds.width;\n        this._setVertical();\n        \n    }\n\n    _setHorizontal = () => {\n        if (this.horizontal.current) {\n            this.horizontal.current.style.transform = `translateY(${this._positionH}px)`;\n            this.props.setY && this.props.setY(this._positionH);\n        }\n    }\n\n    _setHorizontalScrubber = () => {\n        if (this.scrubber1.current) {\n            this.scrubber1.current.style.transform = `translate(${this._positionHS}px, -50%)`;\n        }\n    }\n\n    _setVertical = () => {\n        if (this.vertical.current) {\n            this.vertical.current.style.transform = `translateX(${this._positionV}px)`;\n            this.props.setX && this.props.setX(this._positionV);\n        }\n    }\n\n    _setVerticalScrubber = () => {\n        if (this.scrubber2.current) {\n            this.scrubber2.current.style.transform = `translate(-50%, ${this._positionVS}px)`;\n        }\n    }\n\n    render() {\n        const btn = (\n            <svg className=\"icon\" aria-hidden=\"true\">\n                <use xlinkHref=\"#icon-shangxiahuakuai\" />\n            </svg>\n        );\n        return (\n            <div ref={this.container} className=\"panel\">\n                {this.props.children}\n                <div\n                    className=\"horizontal\"\n                    ref={this.horizontal}\n                >\n                    <div className=\"scrubber\" ref={this.scrubber1}>\n                        { btn }\n                    </div>\n                </div>\n                <div\n                    className=\"vertical\"\n                    ref={this.vertical}\n                >\n                    <div className=\"scrubber\" ref={this.scrubber2}>\n                        { btn }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Cross;\n","import React, { createRef } from 'react';\n\nimport PinchZoomPan from \"react-responsive-pinch-zoom-pan\";\n\nimport { drawDataToCanvas, zoom, pick } from '@src/lib/util';\nimport Cross from './cross';\n\nimport './style.scss';\n\nlet config = {\n    attributes: true,\n    childList: true,\n    subtree: true\n};\n\nclass Panel extends React.Component {\n\n    state = {\n        posX: 0,\n        posY: 0,\n        left: 0,\n        top: 0,\n        scale: 1,\n        showMagnifier: true\n    };\n\n    _observer = new MutationObserver((mutationsList) => {\n        for(let mutation of mutationsList) {\n            let type = mutation.type;\n            switch (type) {\n                case \"attributes\":\n                    if (this.canvas.current) {\n                        let offsetWidth = this.canvas.current.width;\n                        let rect = this.canvas.current.getBoundingClientRect();\n                        let { left = 0, top = 0, width } = rect;\n                        let scale = (width / offsetWidth );\n                        this.setState({ left, top, scale }, () => this._drawMagnifier());\n                    }\n                    console.log(`The ${mutation.attributeName} attribute was modified.`);\n                    break;\n                default:\n                    break;\n            }\n        }\n    });\n\n    constructor(props) {\n        super(props);\n        this.canvas = createRef();\n        this.magnifier = createRef();\n        this.magnifierGrid = createRef();\n        this.pinchZoomPan = createRef();\n    }\n\n    componentDidMount() {\n        const drawable = this.getDrawable();\n        if (this.canvas.current && drawable) {\n            drawDataToCanvas(this.canvas.current, drawable);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const prevDrawable = this.getDrawable(prevProps);\n        const drawable = this.getDrawable();\n    \n        if (drawable && drawable !== prevDrawable && this.canvas.current) {\n            drawDataToCanvas(this.canvas.current, drawable);\n            this._observer.observe(this.canvas.current, config);\n        }\n    }\n\n    // shouldComponentUpdate(nextProps, nextState) {\n    //     return (nextProps.source.decoded !== this.props.source.decoded);\n    // }\n\n    componentWillUnmount() {\n        this._observer.disconnect();\n    }\n\n    getDrawable(props = this.props) {\n        return props.source && props.source.decoded;\n    }\n\n    _drawMagnifier = () => {\n        if (this.canvas.current && this.magnifier.current) {\n            const { posX, posY, left, top, scale } = this.state;\n            zoom(\n                this.canvas.current,\n                this.magnifier.current,\n                Math.round((posX - left) / scale),\n                Math.round((posY - top) / scale),\n                4.5,\n                4.5\n            );\n            const rgba = pick(this.magnifier.current);\n            this.props.onResult(rgba);\n        }\n    }\n\n    _toggleMagnifier = () => {\n        this.setState({\n            showMagnifier: !this.state.showMagnifier\n        })\n    }\n\n    render() {\n        const drawable = this.getDrawable();\n        if (!drawable) return null;\n        const { showMagnifier } = this.state;\n\n        const tools = (\n            <div className=\"side-bar\">\n                <button className=\"item scale-btn\">\n                    { Math.round(this.state.scale * 100) }\n                </button>\n                <button className=\"item scale-btn active\" onClick={this._toggleMagnifier}>\n                    <svg className=\"icon\" aria-hidden=\"true\">\n                        <use xlinkHref=\"#icon-radar\" />\n                    </svg>\n                </button>\n            </div>\n        )\n        return (\n            <div className=\"panel-wrapper\">\n\n                <button className=\"back-btn btn\" onClick={this.props.onBack}>\n                    <svg className=\"icon\" aria-hidden=\"true\">\n                        <use xlinkHref=\"#icon-back\" />\n                    </svg>\n                </button>\n                { tools }\n                <Cross\n                    setX={posX => this.setState({ posX }, () => this._drawMagnifier())}\n                    setY={posY => this.setState({ posY }, () => this._drawMagnifier())}\n                >\n                    <PinchZoomPan\n                        position='center'\n                        zoomButtons={false}\n                        ref={this.pinchZoomPan}\n                    >\n                        \n                        <canvas\n                            ref={this.canvas}\n                            width={drawable && drawable.width}\n                            height={drawable && drawable.height}\n                        />\n                    </PinchZoomPan>\n                </Cross>\n                <div className={`magnifier ${showMagnifier ? '' : 'hidden'}`}>\n                    <canvas\n                        ref={this.magnifier}\n                        width={110}\n                        height={110}\n                    />\n                </div>\n            </div>\n          );\n    }\n}\n\nexport default Panel;\n","import React from 'react';\n\nimport { copy } from '@src/lib/util';\nimport { rgbToHsl, rgbToHex } from '@src/lib/color';\n\nimport './style.scss';\n\nclass Result extends React.Component {\n\n    state = {\n        expand: false\n    };\n\n    _toggleExpand = () => {\n        this.setState({ expand: !this.state.expand });\n    }\n\n    copyContent(text) {\n        if (copy(text)) {\n            if (window.navigator.vibrate) {\n                window.navigator.vibrate([80, 30, 80]);\n            } else {\n                alert('copy success');\n            }\n        };\n    }\n\n    render() {\n        const { rgba = [] } = this.props;\n        const { expand } = this.state;\n        if (rgba.length < 1) return null;\n        const rgbStr = `rgb(${rgba[0]}, ${rgba[1]}, ${rgba[2]})`;\n        const hslStr = rgbToHsl(rgba[0], rgba[1], rgba[2]);\n        const hexStr = rgbToHex(rgba[0], rgba[1], rgba[2]);\n        const expandClass = expand ? 'active' : '';\n        return (\n            <div className=\"result\">\n                <div className={`result-main ${expandClass}`}>\n                    <div className=\"color-item\">\n                        { hexStr }\n                        <svg className=\"icon\" aria-hidden=\"true\"  onClick={() => this.copyContent(hexStr)}>\n                            <use xlinkHref=\"#icon-copy\" />\n                        </svg>\n                    </div>\n                    <div className=\"color-item\">\n                        { hslStr }\n                        <svg className=\"icon\" aria-hidden=\"true\"  onClick={() => this.copyContent(hslStr)}>\n                            <use xlinkHref=\"#icon-copy\" />\n                        </svg>\n                    </div>\n                </div>\n                <div className=\"result-bar\">\n                    <div className={`expand-btn ${expandClass}`} onClick={this._toggleExpand}>\n                        <svg className=\"icon\" aria-hidden=\"true\">\n                            <use xlinkHref=\"#icon-up\" />\n                        </svg>\n                    </div>\n                    <div className=\"preview-area\">\n                        { rgbStr }\n                        <svg className=\"icon\" aria-hidden=\"true\" onClick={() => this.copyContent(rgbStr)}>\n                            <use xlinkHref=\"#icon-copy\" />\n                        </svg>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Result;\n","export function rgbToHsl(r, g, b) {\n    // Make r, g, and b fractions of 1\n    r /= 255;\n    g /= 255;\n    b /= 255;\n\n    // Find greatest and smallest channel values\n    let cmin = Math.min(r,g,b),\n        cmax = Math.max(r,g,b),\n        delta = cmax - cmin,\n        h = 0,\n        s = 0,\n        l = 0;\n    if (delta === 0)\n        h = 0;\n      // Red is max\n    else if (cmax === r)\n        h = ((g - b) / delta) % 6;\n      // Green is max\n    else if (cmax === g)\n        h = (b - r) / delta + 2;\n      // Blue is max\n    else\n        h = (r - g) / delta + 4;\n    \n    h = Math.round(h * 60);\n        \n      // Make negative hues positive behind 360°\n    if (h < 0)\n        h += 360;\n\n    l = (cmax + cmin) / 2;\n\n    // Calculate saturation\n    s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n    \n    // Multiply l and s by 100\n    s = +(s * 100).toFixed(1);\n    l = +(l * 100).toFixed(1);\n\n    return \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\";   \n}\n\nexport function rgbToHex(r, g, b) {\n    r = r.toString(16);\n    g = g.toString(16);\n    b = b.toString(16);\n  \n    if (r.length === 1)\n      r = \"0\" + r;\n    if (g.length === 1)\n      g = \"0\" + g;\n    if (b.length === 1)\n      b = \"0\" + b;\n  \n    return \"#\" + r + g + b;\n}","import React from 'react';\n\nimport { nativeDecode, blobToText, blobToImg, drawableToImageData } from \"@src/lib/util\";\nimport Panel from '../panel';\nimport Result from '../result';\n\nimport './style.scss';\n\nconst originalDocumentTitle = document.title;\n\nasync function processSvg(blob) {\n    const parser = new DOMParser();\n    const text = await blobToText(blob);\n    const document = parser.parseFromString(text, 'image/svg+xml');\n    const svg = document.documentElement;\n  \n    if (svg.hasAttribute('width') && svg.hasAttribute('height')) {\n      return blobToImg(blob);\n    }\n  \n    const viewBox = svg.getAttribute('viewBox');\n    if (viewBox === null) throw Error('SVG must have width/height or viewBox');\n  \n    const viewboxParts = viewBox.split(/\\s+/);\n    svg.setAttribute('width', viewboxParts[2]);\n    svg.setAttribute('height', viewboxParts[3]);\n  \n    const serializer = new XMLSerializer();\n    const newSource = serializer.serializeToString(document);\n    return blobToImg(new Blob([newSource], { type: 'image/svg+xml' }));\n}\n\nclass Pick extends React.Component {\n    widthQuery = window.matchMedia('(max-width: 599px)');\n\n    state = {\n        source: {},\n        mobileView: this.widthQuery.matches,\n        result: [], // [0, 0, 0, 1]\n    };\n\n    _onMobileWidthChange = () => {\n        this.setState({ mobileView: this.widthQuery.matches });\n    }\n\n    componentDidMount() {\n        this.widthQuery.addListener(this._onMobileWidthChange);\n        this._updateFile(this.props.file);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (nextProps.file !== this.props.file) {\n            this.updateFile(nextProps.file);\n        }\n    }\n\n    updateDocumentTitle(filename = '') {\n        document.title = filename ? `${filename} - ${originalDocumentTitle}` : originalDocumentTitle;\n    }\n\n    _updateFile = async file => {\n        this.setState({ loading: true });\n        try {\n            let decoded;\n            let vectorImage;\n            if (file.type.startsWith('image/svg+xml')) {\n                vectorImage = await processSvg(file);\n                decoded = drawableToImageData(vectorImage);\n            } else {\n                decoded = await nativeDecode(file);\n            }\n            this.updateDocumentTitle(file.name);\n            const newState = {\n                ...this.state,\n                source: {\n                    decoded, file\n                },\n                loading: false\n            };\n            this.setState(newState);\n        } catch (e) {\n            console.error(e);\n            alert('Invalid image');\n            this.setState({ loading: false });\n        }\n    }\n\n    render() {\n        const { source, mobileView } = this.state;\n        return (\n            <div className=\"pick\">\n                <Panel\n                    source={source}\n                    mobileView={mobileView}\n                    onBack={this.props.onBack}\n                    onResult={result => this.setState({ result })}\n                />\n                <Result\n                    rgba={this.state.result}\n                />\n            </div>\n          );\n    }\n}\n\nexport default Pick;\n","import React, { Component } from 'react';\n\nimport FileDrop from 'react-file-drop';\n\nimport Intro from './component/intro';\nimport Pick from './component/pick';\n\nimport './App.scss';\n\nconst location = window.location;\nconst ROUTE_EDITOR = '#editor';\n\nfunction back() {\n    window.history.back();\n}\n\nclass App extends Component {\n    state = {\n        isEditorOpen: false,\n        file: undefined,\n    };\n\n    constructor() {\n        super();\n\n        document.body.addEventListener('gesturestart', (event) => {\n            event.preventDefault();\n        });\n      \n        window.addEventListener('popstate', this.onPopState);\n    }\n\n    _handleDrop = (files, event) => {\n        if (!files || files.length === 0) return;\n        const file = files[0];\n        if (!/image/.test(file.type)) {\n            console.log('invalid image');\n            return;\n        }\n        this.setState({ file });\n        this.openEditor();\n    }\n\n    _onPickeLocalFile = file => {\n        if (!file || file.length === 0) return;\n        if (!/image/.test(file.type)) {\n            console.log('invalid image');\n            return;\n        }\n        this.setState({ file });\n        this.openEditor();\n    }\n\n    openEditor() {\n        if (this.state.isEditorOpen) return;\n        const editorURL = new URL(location.href);\n        editorURL.hash = ROUTE_EDITOR;\n        window.history.pushState(null, '', editorURL.hash);\n        this.setState({ isEditorOpen: true });\n    }\n\n    onPopState = () => {\n        console.log(location)\n        this.setState({ isEditorOpen: location.hash === ROUTE_EDITOR });\n    }\n\n    render() {\n        return (\n            <FileDrop onDrop={this._handleDrop}>\n                {\n                    (this.state.isEditorOpen && this.state.file)\n                    ? <Pick file={this.state.file} onBack={back} />\n                    : <Intro onFile={this._onPickeLocalFile} />\n                }\n            </FileDrop>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}